name: Build URCash Release

on:
  push:
    branches: [ main ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main ]

jobs:
  build-tauri:
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: 'macos-latest' # for Arm based macs (M1 and above).
            args: '--target aarch64-apple-darwin'
            target: 'aarch64-apple-darwin'
          - platform: 'macos-latest' # for Intel based macs.
            args: '--target x86_64-apple-darwin'  
            target: 'x86_64-apple-darwin'
          - platform: 'ubuntu-22.04' # for Tauri v1 you could use ubuntu-20.04.
            args: '--target x86_64-unknown-linux-gnu'
            target: 'x86_64-unknown-linux-gnu'
          - platform: 'windows-latest'
            args: '--target x86_64-pc-windows-msvc'
            target: 'x86_64-pc-windows-msvc'

    runs-on: ${{ matrix.platform }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install dependencies (ubuntu only)
        if: matrix.platform == 'ubuntu-22.04' # This must match the platform value defined above.
        run: |
          sudo apt-get update
          sudo apt-get install -y libwebkit2gtk-4.0-dev libwebkit2gtk-4.1-dev libappindicator3-dev librsvg2-dev patchelf
          # you can remove the ones that don't apply to your app

      - name: Rust setup
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - name: Rust cache
        uses: swatinem/rust-cache@v2
        with:
          workspaces: './src-tauri -> target'

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 'lts/*'

      - name: Install frontend dependencies
        run: cd frontend && npm ci

      - name: Build rust-server for target platform
        run: |
          cd rust-server
          cargo build --release --target ${{ matrix.target }}
          
      - name: Copy rust-server binary to Tauri bin directory
        shell: bash
        run: |
          mkdir -p src-tauri/bin
          if [[ "${{ matrix.platform }}" == "windows-latest" ]]; then
            cp rust-server/target/${{ matrix.target }}/release/rust-server.exe src-tauri/bin/rust-server.exe
          else
            cp rust-server/target/${{ matrix.target }}/release/rust-server src-tauri/bin/rust-server
          fi

      - name: Install Tauri CLI
        run: cargo install tauri-cli --version ^2.0.0

      - name: Build Tauri app
        uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          projectPath: src-tauri
          args: ${{ matrix.args }}
          
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: urcash-${{ matrix.target }}
          path: |
            src-tauri/target/${{ matrix.target }}/release/bundle/**/*
          retention-days: 30

  release:
    permissions:
      contents: write
    runs-on: ubuntu-22.04
    needs: build-tauri
    if: startsWith(github.ref, 'refs/tags/v')
    
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        
      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            **/*.msi
            **/*.exe  
            **/*.dmg
            **/*.deb
            **/*.AppImage
          generate_release_notes: true
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}